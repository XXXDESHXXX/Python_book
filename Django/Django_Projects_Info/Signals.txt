Django идёт в комплекте с диспетчером сигналов, который позволяет функциям-получателям получать уведомления о том, когда происходят те или иные действия.
Сигналы очень полезны, когда требуется, чтобы исходный код делал что-то всякий раз, когда происходит что-то ещё.
Сигналы позволяют отцеплять логику.
Можно улавливать определенное действие, независимо
от приложения или исходного кода, вызвавшего это действие, и реализовывать логику, которая выполняется всякий раз, когда это действие происходит.
Django предоставляет моделям ряд сигналов, расположенных в  django.
db.models.signals. Вот несколько таких сигналов:
• pre_save и post_save отправляются до или после вызова метода save()
модели;
• pre_delete и post_delete отправляются до или после вызова метода delete() модели или объекта QuerySet;
• m2m_changed отправляется при изменении поля ManyToManyField в модели.

Сигналы Django бывают синхронными и блокирующими. Не путайте сигналы с асинхронными заданиями. Однако когда ваш исходный код получает уведомление с помощью сигнала, то можно
комбинировать и то, и другое для запуска асинхронных заданий.


!!!Сигналы следует использовать с осторожностью, поскольку они затрудняют понимание процедуры управления. Во многих случаях можно обойтись без использования сигналов, если известны получатели, которые должны уведомляться.
