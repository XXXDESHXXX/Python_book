Парадигма - это способ программирования, не зависящий от конкретного языка.
Парадигма определяет, какие структуры использовать и когда их использовать.
Всего существует три парадигмы:
- Структурное
- Объектно-ориентированное
- Функциональное
Структурное программирование - создатель этой парадигмы показал, что безудержное использование переходов (goto)
вредно для структуры программы. Он предложил заменить переходы более понятными конструкциями if/then/else и do/while/until.
Можно сказать, что:
Структурное программирование накладывает ограничение на прямую передачу управления.

Объектно-ориентированное программирование - Создатели этой парадигмы заметили, что в языке ALGOL есть возможность переместить кадр стека
вызова функции в динамическую память(кучу), благодаря чму локальные переменные, объявленные внутри функции, могут сохраняться после выхода из неё.
Это привело к открытию полиморфизма через строгое использование указателей на функции.

Можно сказать, что:
Объектно-ориентированное программирование накладывает ограничение на косвенную передачу управления.

Функциональное программирование - В основу этой парадигмы легло лямбда-исчисление языка LISP. Основополагающим понятием является неизменяемость.

Можно сказать, что:
Функциональное программирование накладывает ограничение на присваивание.

Каждая парадигма отнимает какие-либо возможности. Ни одно не добавляет новых. Каждая накладывает какие-либо ограничения отрицательные по своей сути.
Парадигмы говорят нам не что делать, а чего нельзя делать.