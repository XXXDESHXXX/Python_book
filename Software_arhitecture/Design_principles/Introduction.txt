Принципы SOLID определяют, как объединять функции и структуры данных в классы и как эти классы должны сочетаться друг с другом.
Цель принципов - создать программные структуры среднего уровня, которые:
- терпимы к изменениям
- просты и понятны
- образуют основу для компонентов, которые могут использоваться во многих программных системах.
Средний уровень означает, что эти принципы применимы на уровне модулей.
Краткая аннотация принципов:
SRP Single Responsibility - принцип единственной ответственности.
Каждый программный модуль имеет одну и только одну причину для изменения.
OCP Open-Closed - принцип открытости/закрытости.
Простая для изменения система должна предусматривать простую возможность изменения её поведения добавлением нового, но не изменением существующего кода.
LSP Liskov Substitution - принцип подстановки Барбары Лисков.
Для создания программных систем из взаимозаменяемых частей эти части должны соответствовать контракту, который позволяет заменять эти части друг с другом.
ISP Interface Segregation - принцип разделения интерфейсов.
Следует избегать зависимостей от всего, что не используется.
DIP Dependency Inversion - принцип инверсии зависимости.
Код, реализующий высокоуровневую политику, не должен зависеть от кода, реализующего низкоуровневые детали. Детали должны зависеть от политики.