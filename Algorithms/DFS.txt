DFS - рекурсивный алгоритм по поиску всех вершин графа или дерева. Обход подразумевает под собой посещение всех вершин графа.
Реализация:
Стандартная реализация алгоритма помещает каждую вершину (узел, node) графа в одну из двух категорий.
1. Visited(Посещённые)
2. Not visited(Не посещённые)
Пример:
def dfs(graph, start, visited=None):
    if visited is None:
        visited = set()
    visited.add(start)

    print(start)

    for next in graph[start] - visited:
        dfs(graph, next, visited)
    return visited


graph = {'0': set(['1', '2']),
         '1': set(['0', '3', '4']),
         '2': set(['0']),
         '3': set(['1']),
         '4': set(['2', '3'])}

dfs(graph, '0')
Временная сложность алгоритма O(V + E), где V - количество вершин, а E - количество рёбер.
Пространственная сложность алгоритма равна O(V).
