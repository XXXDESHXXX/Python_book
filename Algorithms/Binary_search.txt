Бинарный поиск - это алгоритм поиска определённого элемента в списке.
Примечание!
Элементы в списке должны быть отсортированы для применения алгоритма двоичного поиска.Если они не отсортированы бинарный поиск не сработает.
Концепция бинарного поиска:
Бинарный поиск можно реализовать различными способами:
- рекурсивный метод
- итерационный метод
Реализация алгоритма:
1)Сначала устанавливаются два указателя на начало и конец списка.
2)Далее вычисляется средний элемент списка.
3)Далее используется цикл while который выполняется до момента, пока он не сократится до 1 элемента.
4)Вычисляется средний элемент.
5)Проверяется ряд условий, с помощью которых находится нужный нам элемент, либо длина списка сокращается на 1.
Итерационный метод:
def binary_search(list, item):
    low = 0
    high = len(list) - 1
    while low <= high:     Пока эта часть не сократится до одного элемента, проверяем средний элемент
        mid = (low + high)/2
        guess = list[mid]
        if guess == item:    Значение найдено
            return mid
        if guess > item:      Много
            high = mid - 1
        else:     Мало
            low = mid + 1
        return None     Значение не существует



my_list = [1, 3, 5, 6, 7, 9]
Рекурсивный метод:
def binary_search(list1, low, high, n):

   # Check base case for the recursive function
   if low  n:
         return binary_search(list1, low, mid - 1, n)

      # Else the search moves to the right sublist1
      else:
         return binary_search(list1, mid + 1, high, n)

   else:
      # Element is not available in the list1
      return -1

# Test list1ay
list1 = [12, 24, 32, 39, 45, 50, 54]
n = 32

# Function call
res = binary_search(list1, 0, len(list1)-1, n)

if res != -1:
   print("Element is present at index", str(res))
else:
   print("Element is not present in list1")
- Среднее число вычисляем как в прошлой программе.
- Мы используем оператор if, чтобы продолжить двоичный поиск.
- Если среднее значение равно числу, которое мы ищем, возвращается среднее значение.
- Если среднее значение меньше значения, мы снова ищем нашу рекурсивную функцию binary_search(), увеличиваем среднее значение на единицу и присваиваем низкое значение.
- Если среднее значение больше, чем значение, которое мы ищем, тогда наша рекурсивная функция binary_search() снова уменьшит среднее значение на единицу и присвоит ему низкое.
Сложность данного алгоритма O(logn)
