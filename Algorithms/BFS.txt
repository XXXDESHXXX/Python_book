Поиск в ширину(BFS) - продвигается уровень за уровнем, до конечного узла(вершины). где расстояние - это минимальная длина пути от исходной вершины до узла.
# Perform BFS on the graph starting from vertex `v`
    def isUnivalTree(self, root: Optional[TreeNode]) -> bool:
        queue = [root]
        while queue:
            node = queue.pop(0)
            if node.val != root.val:
                return False
            if node.left:
                queue.append(node.left)
            if node.right:
                queue.append(node.right)
        return True
Временная сложность обхода BFS составляет O(V + E), куда V, а также E - общее количество вершин и ребёр соответсвенно.
O(E) Может варьироваться между O(1), а также O(V^2), в зависимости от того, насколько плотен graph.
