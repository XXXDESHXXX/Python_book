Унарные операторы и функции
Pos
Определяет поведение для унарного плюса +some_object

Neg
Определяет поведение для унарного отрицания -some_object

Abs
Определяет поведение для встроенной функции abs()

Invert
Определяет поведение для инвертирования оператором ~

Round(self, n) n - число знако после запятой, до которого округлить.
Определяет поведение для втроенной функции round()

Floor
Определяет поведение для math.floor(), то есть, округления до ближайшего меньшего целого

Ceil
Определяет поведение для math.ceil(), то есть, округления до ближайшего большего целого

Trunc
Определяет поведение для math.trunc(), то есть, обрезания до целого.


Обычные арифметические операторы
Add
Сложение

Sub
Вычитание

Mul
Умножение

Floordiv
Целочисленное деление, оператор //

Truediv
Правильно деление. Это работает только когда используется:
from __future__ import division

Mod
Остаток от деления, оператор %

Divmod
Определяет поведение для встроенной функции divmod()

Pow
Возведение в степень, оператор **

Lshift
Двоичный сдвиг влево, оператор <<.

Rshift
Двоичный сдвиг вправо, оператор >>.

And
Двоичное И, оператор &.

Or
Двоичное ИЛИ, оператор |

Xor
Двоичный xor, оператор ^

Отражённые арифметические операторы
Radd
Отражённое сложение

Rsub
Отражённое вычитание

Rmul
Отражённое умножение

Rfloordiv
Отражённое целочисленное деление, оператор //

Rdiv
Отражённое деление, оператор /

Rtruediv
Отражённое правильное деление. Работает только когда используется:
from __future__ import division

Rmod
Отражённый остаток от деления, оператор %

Rdivmod
Определяет поведение для встроенной функции divmod(), когда вызывается divmod()

Rpow
Отражённое возведение в степень, оператор **

Rlshift
Отражённый двоичный сдвиг влево, оператор <<

Rrshift
Отражённый двоичный сдвиг вправо, оператор >>

Rand
Отражённое двоичное И, оператор &

Ror
Отражённое двоичное ИЛИ, оператор |

Rxor
Отражённый двоичный xor, оператор ^


Составное присваивание
Iadd
Сложение с присваиванием

Isub
Вычитание с присваиванием

Imul
Умножение с присваиванием

Ifloordiv
Целочисленное деление с присваиванием, оператор //=

Idiv
Деление с присваиванием, оператор /=

Itruediv
Правильное деление с присваиванием. Заметьте, что работает только если исплользуется:
from __future__ import division

Imod
Остаток от деления с присваиванием, оператор %=

Ipow
Возведение в степень с присваиванием, оператор **=

Ilshift
Двоичный сдвиг влево с присваиванием, оператор <<=

Irshift
Двоичный сдвиг вправо с присваиванием, оператор >>=

Iand
Двоичное И с присваиванием, оператор &=

Ior
Двоичное ИЛИ с присваиванием, оператор |=

Ixor
Двоичный xor с присваиванием, оператор ^=

Методы преобразования типов.
Int
Преобразование типа в int

Long
Преобразование типа в long

Float
Преобразование типа в float

Complex
Преобразование типа в комплексное число

Oct
Преобразование типа в восьмеричное число

Hex
Преобразование типа в шестнадцатеричное число

Index
Преобразование типа к int, когда объект используется в срезах.

Trunc
Вызывается при math.trunc. Должен вернуть своё значение, обрезанное до целочисленного типа.
