Для работы со списками определены различные методы:
- append(x)
Данный метод добавляет элемент в конец списка. Такую же операцию можно сделать так: a[len(a):] = [x]
a = [1, 2]
a.append(3)
out : [1, 2, 3]
- extend(x)
Расширяет существующий список за счёт добавления всех элементов из списка L. Эквивалентно команде a[len(a):] = L.
a = [1, 2]
b = [3, 4]
a.extend(b)
out: [1, 2, 3, 4]
- insert(i, x)
Этот метод вставляет элемент x в позицию i. Первый аргумент - индекс элемента, после которого будет вставлен элемент x.
a = [1, 2]
a.insert(0, 5)
out: [5, 1, 2]
a.insert(len(a), 9)
out: [5, 1, 2, 9]
- remove(x)
Удаляет первое вхождение элемента x из списка.
a = [1, 2, 3]
a.remove(1)
out: [2,3]
- del x[i]
Если необходимо удалить элемент по его индексу, можно воспользоваться командой del.
c = [3, 5, 1, 9, 6]
del c[2]
out: [3, 5, 9, 6]
- pop([i])
Удаляет элемент из позиции i и возвращает его. Если использовать метод без аргумента, то будет удалён последний элемент из списка.
a = [1, 2, 3, 4, 5]
a.pop(2)
out: [1, 2, 4, 5]
- clear()
Удаляет все элементы из списка. Эквивалентно del a[:].
a = [1, 2, 3, 4, 5]
a.clear()
out : []
- index()
Возвращает индекс элемента.
list.index(x)
a = [1, 2, 3, 4, 5]
a.index(4)
out: 3
- count()
Возвращает количество вхождений элемента в список.
list.count(x)
a = [1, 2, 2, 3, 3]
a.count(2)
out: 2
- sort()
Сортирует элементы в списке по возрастанию. Для сортировки в обратном порядке нужно задать флаг reverse=True.
Дополнительные возможности открывает параметр key.
list.sort(key=None, reverse=False)
a = [1, 4, 2, 8, 1]
a.sort()
out: [1, 1, 2, 4, 8]
- reverse()
Изменяет порядок расположения элементов списке на обратный.
a = [1, 3, 5, 7]
a.reverse()
out: [7, 5, 3, 1]
- copy()
Возвращает копию списка. Эквивалентно a[:].
a = [1, 7, 9]
b = a.copy()
out: [1, 7, 9]
Изменяя список b, список a останется без изменений.
- sorted(list, [key])
Возвращает отсортированный список.
- min(list)
Возвращает наименьший элемент списка.
- max(list)
Возвращает наибольший элемент списка.
