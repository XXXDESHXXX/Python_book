Адаптер - это структурный паттерн, который позволяет объектам с несовместимыми интерфейсами работать вместе.
Проблема:
У вас есть объект, который скачивает биржевые котировки из нескольких источников в XML. В какой-то момент нужно будет улучшить приложение, применив стороннюю библиотеку аналитики.
Но библиотека поддерживает только формат данных JSON, несовместимый с вашим приложением.
Можно было бы переписать библиотеку, чтобы она поддерживала формат XML. Но это может нарушить работу существующего кода, который уже зависит от библиотеки. А во-вторых, у вас может просто не быть
доступа к её исходному коду.


Решение:
Можно сделать адаптер. Это объект-переводчик, который трансформирует интерфейс или данные одного объекта в такой вид, чтобы он стал понятен другому объекту.
При этом сам адаптер оборачивает один из объектов, так что другой объект даже не знает о наличии первого.
Адаптер работает следующим образом:
1. Адаптер имеет интерфейс, который совместим с одним из объектов.
2. Объект может свободно вызывать методы адаптера.
3. Адаптер получает эти вызовы и перенаправляет их второму объекту, но уже в том формате и последовательности, которые понятны второму объекту.
