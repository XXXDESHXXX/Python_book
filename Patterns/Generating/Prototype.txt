Прототип - порождающий паттерн, который позволяет копировать объекты, не вдаваясь в подробности их реализации.
Проблема:
Нам нужно скопировать объект. Как это сделать? Создать пустой объект такого же класа, а затем поочерёдно скопировать значения всех полей из старого объекта в новый.
Но есть нюанс. Не каждый объект удастся скопировать таким образом, ведь часть его состояния может быть приватной, а значит недоступной для остального кода программы.
Есть и другая проблема, копирующий код станет зависим от классов копируемых объектов. Ведь, чтобы перебрать все поля объекта, нужно привязаться к его классу.
Из-за этого невозможно копировать объекты, зная только их интерфейсы, а не конкретные классы.


Решение:
Паттерн Прототип поручает создание копий самим копируемым объектам. Суть его в том, чтобы создать общий интерфейс для всех объектов, поддерживающих клонирование.
Это позволяет копировать объекты, не привязываясь к их конкретным классам. Обычно такой интерфейс имеет всего один метод clone.
Метод создаёт новый объект текущего класса и копирует в него значения всех полей собственного объекта.


Объект, который копируют, называется прототипом (откуда и название паттерна). Когда объекты программы содержат сотни полей и тысячи возможных конфигураций, прототипы могут служить своеобразной альтернативой созданию подклассов.